//Case - when api doc is yet to be generated by devs
//we only have a dummy api json response
//converting json response to nodes in json editor

package basics;

import org.testng.Assert;

import files.Payload;
import io.restassured.path.json.JsonPath;

public class PractiseProject {

	public static void main(String[] args) {
	
		JsonPath js = new JsonPath(Payload.dummyAPIResponse());
		
		//print no. of courses returned by api
		int courseCount = js.getInt("courses.size()");
		System.out.println(courseCount);
		
		//print purchase amt
		int totalAmt = js.getInt("dashboard.purchaseAmount");
		System.out.println(totalAmt);
		
		//print title of first course
		String title1 = js.getString("courses[0].title");
		System.out.println(title1);
		
		
		
		//print all courses title and their resp prices
		for(int i=0;i<courseCount;i++) {
			
			String titles = js.get("courses["+i+"].title");
			System.out.println(titles);
			System.out.println(js.get("courses["+i+"].price").toString());
			
					
		}
		
		
		//print no. of copies sold by rpa course
		System.out.println("Print no of copies sold by RPA Course");
		
		for(int i =0;i<courseCount;i++) {
			
			String courseTitle = js.get("courses["+i+"].title");
			
			if(courseTitle.equalsIgnoreCase("RPA")) {
				
				System.out.println(js.get("courses["+i+"].copies").toString());
				break;
			}
			
			}
		
		//verify if all individual prices match purchase amt
		
		int sum = 0;
		for(int i=0;i<courseCount;i++) {
			
			int price = js.get("courses["+i+"].price");
			int copies = js.get("courses["+i+"].copies");
			
			int eachCoursePrice = price * copies;
			System.out.println(eachCoursePrice);
			sum = sum + eachCoursePrice;
			
		}
		
		System.out.println(sum);
		Assert.assertEquals(sum, totalAmt);
		
		
		
	}

}
